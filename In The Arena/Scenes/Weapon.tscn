[gd_scene load_steps=21 format=2]

[ext_resource path="res://Sprites/Characters/dummysword.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D
var unitVector = Vector2()
var screensize = Vector2()

var weaponName = String()
export var placeInCombo = 0
export var readyToQueue = false

var weaponFacingChance = {\"Sword\": 65}
var weaponDamage = {\"Sword\": 2}
var comboLengths = {\"Sword\": 2}

onready var anim = $AnimHandler
onready var hitbox = $Sprite/hitbox
onready var holder = null
# Called when the node enters the scene tree for the first time.
func _ready():
	screensize = Vector2(ProjectSettings.get_setting(\"display/window/size/width\"),ProjectSettings.get_setting(\"display/window/size/height\"))
	add_to_group('weapons')
	weaponName = \"Sword\"
	
	pass # Replace with function body.

func hitChance():
	return weaponFacingChance[weaponName]

func reset():
	placeInCombo = 0
	anim.stop()

func parry():
	#anim.play(weaponName + \"Parry\")
	for weapon in get_tree().get_nodes_in_group(\"weapons\"):
		if weapon == self:
			continue
		if hitbox.overlaps_area( weapon.hitbox ) and weapon.placeInCombo != 0:
			if weapon.holder:
				print(\"HI\")
				weapon.holder.stunned = true

func attack():
	if !readyToQueue:
		return
	placeInCombo+=1
	
	anim.play(weaponName + \"Attack\" + String(placeInCombo))
	if placeInCombo == comboLengths[weaponName]:
		placeInCombo = 0

func _process(delta):
	
	pass

func set_angle(theta):
	rotation = theta"

[sub_resource type="Animation" id=2]
resource_name = "Idle"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, -13 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=3]
resource_name = "Parry"

[sub_resource type="Animation" id=4]
length = 0.4
step = 0.03
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.09, 0.27, 0.39 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 101.8, -61.2, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:readyToQueue")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.39 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:placeInCombo")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 1,
"values": [  ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.09, 0.27, 0.39 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, -13 ), Vector2( 5, -20 ), Vector2( -5, -20 ), Vector2( 0, -13 ) ]
}

[sub_resource type="Animation" id=5]
length = 0.4
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ -61.2, 61.1, 132.4, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:readyToQueue")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:placeInCombo")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 1,
"values": [  ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -5, -12 ), Vector2( 0, -20 ), Vector2( 0, -13 ) ]
}

[sub_resource type="AnimationNodeBlendSpace2D" id=6]

[sub_resource type="AnimationNodeBlendSpace2D" id=7]

[sub_resource type="AnimationNodeAnimation" id=8]
animation = "Idle"

[sub_resource type="AnimationNodeAnimation" id=9]
animation = "SwordAttack1"

[sub_resource type="AnimationNodeAnimation" id=10]
animation = "SwordAttack2"

[sub_resource type="AnimationNodeStateMachineTransition" id=11]

[sub_resource type="AnimationNodeStateMachineTransition" id=12]
switch_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id=13]
switch_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id=14]
switch_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id=15]
switch_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id=16]
switch_mode = 2

[sub_resource type="AnimationNodeStateMachine" id=17]
states/BlendSpace2D/node = SubResource( 7 )
states/BlendSpace2D/position = Vector2( 305.901, 138 )
"states/BlendSpace2D 2/node" = SubResource( 6 )
"states/BlendSpace2D 2/position" = Vector2( -92.0989, 195.203 )
states/Idle/node = SubResource( 8 )
states/Idle/position = Vector2( -173.599, 98.6309 )
states/SwordAttack1/node = SubResource( 9 )
states/SwordAttack1/position = Vector2( 102.5, 98.3125 )
states/SwordAttack2/node = SubResource( 10 )
states/SwordAttack2/position = Vector2( 101.5, 195.406 )
transitions = [ "Idle", "SwordAttack1", SubResource( 11 ), "SwordAttack1", "Idle", SubResource( 12 ), "SwordAttack1", "BlendSpace2D", SubResource( 13 ), "BlendSpace2D", "SwordAttack2", SubResource( 14 ), "SwordAttack2", "BlendSpace2D 2", SubResource( 15 ), "BlendSpace2D 2", "Idle", SubResource( 16 ) ]
graph_offset = Vector2( -348.599, 0 )

[sub_resource type="AnimationNodeStateMachinePlayback" id=18]

[sub_resource type="RectangleShape2D" id=19]
extents = Vector2( 2.15298, 8.84492 )

[node name="Weapon" type="Node2D"]
script = SubResource( 1 )
readyToQueue = true

[node name="AnimHandler" type="AnimationPlayer" parent="."]
anims/Idle = SubResource( 2 )
anims/Parry = SubResource( 3 )
anims/SwordAttack1 = SubResource( 4 )
anims/SwordAttack2 = SubResource( 5 )

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource( 17 )
anim_player = NodePath("../AnimHandler")
active = true
parameters/playback = SubResource( 18 )
parameters/BlendSpace2D/blend_position = Vector2( 0, 0 )
"parameters/BlendSpace2D 2/blend_position" = Vector2( 0, 0 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )
offset = Vector2( 0, -13 )

[node name="hitbox" type="Area2D" parent="Sprite"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Sprite/hitbox"]
position = Vector2( -0.110184, -11.2221 )
shape = SubResource( 19 )
